-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.

BEGIN;


CREATE TABLE IF NOT EXISTS public.device
(
    dev_id SERIAL,
    dev_name character varying(60),
    dev_type integer,
    dev_status integer,
    dev_desc character varying(255),
    CONSTRAINT device_pkey PRIMARY KEY (dev_id)
);

CREATE TABLE IF NOT EXISTS public.device_status
(
    devstatus_id SERIAL,
    devstatus_name character varying(60),
    CONSTRAINT device_status_pkey PRIMARY KEY (devstatus_id)
);

CREATE TABLE IF NOT EXISTS public.device_type
(
    devtype_id SERIAL,
    devtype_name character varying(60),
    CONSTRAINT device_type_pkey PRIMARY KEY (devtype_id)
);

CREATE TABLE IF NOT EXISTS public.oa_user
(
    user_id SERIAL,
    user_name character varying(60),
    user_email character varying(64),
    user_type character varying(32),
    user_photo character varying(400),
    user_desc character varying(255),
    CONSTRAINT oa_user_pkey PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS public.reservation
(
    res_id SERIAL,
    res_id_user integer,
    res_id_gtype integer,
    res_id_status integer,
    res_start_data date,
    res_end_data date,
    CONSTRAINT reservation_pkey PRIMARY KEY (res_id)
);

CREATE TABLE IF NOT EXISTS public.reservation_status
(
    reservationstatus_id SERIAL,
    reservationstatus_name character varying(60),
    CONSTRAINT reservation_status_pkey PRIMARY KEY (reservationstatus_id)
);

CREATE TABLE IF NOT EXISTS public.room
(
    room_id SERIAL,
    room_name character varying(60),
    room_type integer,
    room_status integer,
    room_desc character varying(255),
    CONSTRAINT room_pkey PRIMARY KEY (room_id)
);

CREATE TABLE IF NOT EXISTS public.room_status
(
    roomstatus_id SERIAL,
    roomstatus_name character varying(60),
    CONSTRAINT room_status_pkey PRIMARY KEY (roomstatus_id)
);

CREATE TABLE IF NOT EXISTS public.room_type
(
    roomtype_id SERIAL,
    roomtype_name character varying(60),
    roomtype_desc character varying(255),
    CONSTRAINT room_type_pkey PRIMARY KEY (roomtype_id)
);

CREATE TABLE IF NOT EXISTS public.vehicle
(
    veh_id SERIAL,
    veh_name character varying(60),
    veh_marc character varying(32),
    veh_type integer,
    veh_status integer,
    veh_plate character varying(7),
    veh_desc character varying(255),
    CONSTRAINT vehicle_pkey PRIMARY KEY (veh_id)
);

CREATE TABLE IF NOT EXISTS public.vehicle_status
(
    vehstatus_id SERIAL,
    vehstatus_name character varying(60),
    CONSTRAINT vehicle_status_pkey PRIMARY KEY (vehstatus_id)
);

CREATE TABLE IF NOT EXISTS public.vehicle_type
(
    vehtype_id SERIAL,
    vehtype_name character varying(60),
    vehtype_desc character varying(255),
    CONSTRAINT vehicle_type_pkey PRIMARY KEY (vehtype_id)
);

CREATE TABLE IF NOT EXISTS public.gtype_list
(
    "id_gtypeList" SERIAL,
    gtype_room integer,
    gtype_vehicle integer,
    gtype_device integer,
    PRIMARY KEY ("id_gtypeList")
);

ALTER TABLE IF EXISTS public.device
    ADD CONSTRAINT device_type FOREIGN KEY (dev_type)
    REFERENCES public.device_type (devtype_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.device
    ADD CONSTRAINT device_status FOREIGN KEY (dev_status)
    REFERENCES public.device_status (devstatus_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.reservation
    ADD CONSTRAINT reservation_status FOREIGN KEY (res_id_status)
    REFERENCES public.reservation_status (reservationstatus_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.reservation
    ADD CONSTRAINT reservation_user FOREIGN KEY (res_id_user)
    REFERENCES public.oa_user (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.reservation
    ADD CONSTRAINT reservation_gtype FOREIGN KEY (res_id_gtype)
    REFERENCES public.gtype_list ("id_gtypeList") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.room
    ADD CONSTRAINT room_status FOREIGN KEY (room_status)
    REFERENCES public.room_status (roomstatus_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.room
    ADD CONSTRAINT room_type FOREIGN KEY (room_type)
    REFERENCES public.room_type (roomtype_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.vehicle
    ADD CONSTRAINT vehicle_type FOREIGN KEY (veh_type)
    REFERENCES public.vehicle_type (vehtype_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.vehicle
    ADD CONSTRAINT vehicle_status FOREIGN KEY (veh_status)
    REFERENCES public.vehicle_status (vehstatus_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.gtype_list
    ADD CONSTRAINT gtype_room FOREIGN KEY (gtype_room)
    REFERENCES public.room (room_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.gtype_list
    ADD CONSTRAINT gtype_vehicle FOREIGN KEY (gtype_vehicle)
    REFERENCES public.vehicle (veh_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.gtype_list
    ADD CONSTRAINT gtype_device FOREIGN KEY (gtype_device)
    REFERENCES public.device (dev_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;